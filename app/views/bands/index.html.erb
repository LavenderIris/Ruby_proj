<style>
    .table {
        width: auto;
    }
</style>

<div class = "container" >
    <div class = "row" >
        <div class = "col-md-6" >

<h3><%= @bandname %></h3>
<h4>Venue Name: <%= @venuename %></h4>
<h4>Location: <%= @venuelocation %></h4>
<h4>State: <%= @venuestate %></h4>
<h4>Date: <%= @eventdate %></h4>

<table class="table">
    <col width="400">
    <thead class="thead-inverse">
      <tr>
        <th>Songs</th>
      </tr>
    </thead>
    <tbody>
    <% @songlist.each do |s| %>
        <% s["song"].each do |s2| %>
        <tr>
            <td id="lyrics"><%=s2["name"]%></td>
        </tr>
        <% end %>
    <% end %>
    </tbody>

</table>

</div>

<div class = "col-md-6">

    <body onload="initialize(), codeAddress()">
    <div id="map" style="width: 320px; height: 480px;"></div>


        <script>
        var geocoder;
        var map;
        function initialize() {
        geocoder = new google.maps.Geocoder();
        //coords in LatLng() is where the map will center to when initialized 
        var latlng = new google.maps.LatLng(<%= @lat %>, <%= @longitude %>);
        var mapOptions = {
        zoom: 10,
        center: latlng
        }
        map = new google.maps.Map(document.getElementById('map'), mapOptions);
        }

        //array of coords to render as markers
        var locations = [{lat:<%= @lat %>, lng:<%= @longitude %>}]
        //iterate through each coord pair and create a marker on the map
        function codeAddress(){
        for (var i=0;i<locations.length;i++){
        geocoder.geocode( { 'latLng': locations[i]}, function(results, status) {
        if (status == 'OK') {
            var marker = new google.maps.Marker({
                map: map,
                position: results[0].geometry.location
            });
        } else {
            alert('Geocode was not successful for the following reason: ' + status);
        }
        });
        }
        }

        //api key
        </script>
        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAZlytKX1vyVfQi2Lw-1Zfuu1xKKFho68o&libraries=places&callback=initAutocomplete"
        async defer></script>
        </div>
    </div>

<div class = "col" id = "lyrics" >
    <script type="text/javascript">
        function getLyrics(id) {

            //this callback contains another query to get lyrics after we've retried the song id
            this.jsonp_callback = function(data){
                $.ajax({
                    type: "GET",
                    data: {
                        apikey:"f3852752b58ca26b3340a0ae930e9086",
                        format:"jsonp",
                        callback:"jsonp_callback_lyrics"
                    },
                    url: "http://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=" + data["message"]["body"]["track_list"][0]["track"]["track_id"],
                    dataType: "jsonp",
                    jsonpCallback: 'jsonp_callback_lyrics',
                    contentType: 'application/json'
                });
            };
            

            //this callback adds lyrics to the #lyrics div
            this.jsonp_callback_lyrics = function(data){
                console.log(data["message"]["body"]["lyrics"])

                console.log(data["message"]["body"]["lyrics"]["lyrics_body"][40])
                console.log(data["message"]["body"]["lyrics"]["lyrics_body"][41])
                console.log(data["message"]["body"]["lyrics"]["lyrics_body"][42])
                console.log(data["message"]["body"]["lyrics"]["lyrics_body"][43])
                
                var lyrics = data["message"]["body"]["lyrics"]["lyrics_body"]
                var string = "<p>"

                for (var i=0; i<lyrics.length - 69; i++){
                    string += lyrics[i]
                    if (lyrics[i+1] == "\n" && lyrics[i+2] == "\n"){
                        string += "</p><p>"
                    }

                }
                string += "</p>"

                console.log(string)
                $("#lyrics").html(string);
            };


            //this finds the song's id using just the name of the song
            $.ajax({
            type: "GET",
            data: {
                apikey:"f3852752b58ca26b3340a0ae930e9086",
                q_track:id,
                format:"jsonp",
                callback:"jsonp_callback"
            },
            url: "http://api.musixmatch.com/ws/1.1/track.search",
            dataType: "jsonp",
            jsonpCallback: 'jsonp_callback',
            contentType: 'application/json'
            });

        }
    </script>
</div>




</div> 

<% if @bands %>
    <% @bands.each do |b| %>
        <a href="/bands/<%= b.id %>/"><%= b.name %></a>
    <% end %>
<% end %>

<form action="/bands/new" method="post">
    <input type="hidden" name="authenticity_token" value="<%= form_authenticity_token %>">
    <input id="searchName" type="text" name="band[search]" value="Enter a band name">
    <input type="submit" name="" value="Search">
</form>
